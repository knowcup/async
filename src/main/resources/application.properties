#最小线程数
spring.task.pool.corePoolSize = 10
#最大线程数
spring.task.pool.maxPoolSize = 1200
#等候队列  缺省值为：Integer.MAX_VALUE
spring.task.pool.queueCapacity = 10
#超过core size的那些线程，任务完成后，再经过这个时长（秒）会被结束掉缺省值为：Integer.MAX_VALUE
spring.task.pool.keepAliveSeconds = 10
#线程名称前缀
spring.task.pool.threadNamePrefix = keler-AsyncExecutorThread-

# 当【最小线程数】已经被占用满后，新的任务会被放进【等候队列】里面，
# 当【等候队列】的capacity也被占满之后，pool里面会创建新线程处理这个任务，直到总线程数达到了【最大线程数】
# 这时系统会根据【拒绝策略】处理新任务（
#   ABORT（缺省）：抛出TaskRejectedException异常，然后不执行
#   DISCARD：不执行，也不抛出异常
#   DISCARD_OLDEST：丢弃queue中最旧的那个任务
#   CALLER_RUNS：不在新线程中执行任务，而是有调用者所在的线程来执行
# ）。
